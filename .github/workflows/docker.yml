name: Build and push CRMEB Docker image

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/crmeb

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4


      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # - name: Login to DockerHub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Fix Dockerfile for PHP 7.4 packages
        run: |
          # 备份原始 Dockerfile
          cp ./docker-compose/php/Dockerfile ./docker-compose/php/Dockerfile.backup
          
          # 创建修复后的 Dockerfile
          cat > ./docker-compose/php/Dockerfile << 'EOF'
          FROM php:7.4-fpm AS crmeb_php
          WORKDIR "/var/www"

          # 安装系统依赖
          RUN apt-get update && apt-get install -y \
              libfreetype6-dev \
              libjpeg62-turbo-dev \
              libpng-dev \
              libzip-dev \
              libicu-dev \
              libxml2-dev \
              libxslt-dev \
              libcurl4-openssl-dev \
              libssl-dev \
              libonig-dev \
              libbz2-dev \
              libpq-dev \
              libgd-dev \
              && rm -rf /var/lib/apt/lists/*

          # 安装 PHP 扩展 - 只安装核心扩展
          RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
              && docker-php-ext-install -j$(nproc) \
                  bcmath \
                  gd \
                  mysqli \
                  zip \
                  intl \
                  xml \
                  curl \
                  mbstring \
                  pdo \
                  pdo_mysql

          # 安装 Redis 扩展
          RUN pecl install redis && docker-php-ext-enable redis

          # PHP 配置
          RUN echo "open_basedir = /tmp:/var" > /usr/local/etc/php/conf.d/open_basedir.ini

          # 添加我们的文件
          ADD ./crmeb /var/www
          ADD ./docker-compose/php/php-ini-overrides.ini /usr/local/etc/php/conf.d/99-overrides.ini
          EOF

      #- name: Get tag
      #  id: tag
      #  uses: devops-actions/action-get-tag@v1.0.1
      #  with:
      #    strip_v: true # Optional: Remove 'v' character from version

      - name: Build and push CRMEB Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker-compose/php/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/crmeb:latest
          no-cache: true

      - name: Build and push nginx Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/nginx:latest